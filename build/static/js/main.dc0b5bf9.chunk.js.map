{"version":3,"sources":["Info.jsx","api/api.js","redux/sentence-reducer.js","Test.jsx","Experiment.jsx","Login.jsx","routes.js","Body.jsx","App.js","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["Info","style","margin","border","borderRadius","height","paddingTop","marginTop","onClick","this","props","start","React","Component","instance","axios","baseURL","headers","withCredentials","getSentence","get","postData","postObj","post","SET_SENTENCE","initialState","sentence","mySetSentence","type","sentenceReducer","state","action","Test","stage","correct","validation","number","values","eval","paragraph","counter","color","HandleState","index","setState","handleInputChange","e","target","value","HandleSelect","HandlePar","val","console","log","HandleChange","event","len","data","feedback","split","length","i","new_dic","join","id","toString","postD","lemma_list","lemma","myRef","createRef","myRef2","Object","keys","my_number","name","temp_dic","answer_list","answer","feedback_list","frase","count","new_frase","map","sent","ref","placeholder","width","padding","backgroundColor","onChange","display","post_text","ProgressBar","now","withRouter","connect","dispatch","then","res","Experiment","handleClick","mySentence","Login","Container","Row","Col","Form","Group","controlId","Label","Control","Text","className","Check","label","Button","variant","BaseRouter","exact","path","component","Body","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","composeEnhances","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc0b5bf9.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass Info extends React.Component {\n\n\n\n  render(){\n\n   return (\n     <div style={{margin:'100px'}}>\n      <div style={{border:'solid',borderRadius:'10px' ,height: '400px', paddingTop:'100px'}}>\n      <center>\n        Это информация про эксперимент\n      </center>\n      <center>\n      <button style={{marginTop:'200px'}} onClick={this.props.start}>\n        Начать\n      </button>\n      </center>\n\n      </div>\n     </div>\n   )\n }\n}\n\nexport default Info\n","import * as axios from \"axios\";\n\n\n\nconst instance = axios.create({\n\n    baseURL: 'http://127.0.0.1:8000/',\n    headers:     {\n        \"Authorization\": \"\",\n        \"Content-Type\" : \"application/json\",\n\n    },\n    withCredentials: false,\n});\n\n\nexport const getSentence = {\n    sentence() {\n    return (instance.get(`api/tables/`))\n    }\n}\n\n\nexport const postData = {\n  postAnswer (postObj){\n  return(instance.post(`api/finals/`, postObj))\n }\n}\n","import axios from 'axios'\nimport { updateObject } from './utility';\nimport {getSentence, postData} from \"./../api/api\";\n\n\n\nconst SET_SENTENCE = 'SET_SENTENCE';\n\n\n\nexport const mySentence = () => {\n  return dispatch => {\n    getSentence.sentence()\n    .then(res=> {\n      const sentence = res.data;\n        dispatch(mySetSentence(sentence));\n\n    })\n  }\n}\n\n\nlet initialState = {\n  sentence : ''\n}\n\nexport const mySetSentence = (sentence) => ({type: SET_SENTENCE, sentence })\n\n\nconst sentenceReducer = (state = initialState, action) => {\n    switch(action.type) {\n      case SET_SENTENCE:\n        return {...state, sentence : action.sentence}\n        default:\n            return state;\n         }\n     }\n\n\nexport const postD = (postObj) =>{\n       return dispatch => {\n         postData.postAnswer(postObj)\n         .then(res=>console.log(res))\n       }\n     }\n\nexport default sentenceReducer\n","import React from 'react';\n\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport { postD } from './redux/sentence-reducer.js'\n\n\nclass Test extends React.Component {\n\n  constructor(props) {\n      super(props);\n      this.myRef = React.createRef();\n      this.myRef2 = React.createRef();\n    }\n\n  state = {\n    stage : 'start',\n    correct : false,\n    validation : '',\n    number : 0,\n    values : [],\n    eval : [],\n    paragraph: '1',\n    counter: 0,\n    color: []\n\n  }\n\n  componentDidMount(){\n\n    var lemma_list = this.props.data[this.state.number].lemma.split(';')\n    for (var i=0;i< lemma_list.length; i++){\n      this.state.values[i] = 'not'\n      this.state.eval[i] = 1\n      this.state.color[i] = ''\n      this.setState(\n          {\n        values: this.state.values,\n        eval : this.state.eval,\n        color:  this.state.color\n      })\n    }\n\n\n\n\n  }\n\n    HandleState = (index) =>{\n    this.state.values[index] = ''\n    this.setState(\n        {\n      values: this.state.values,\n    })\n  }\n\n\n  handleInputChange = (e,index) => {\n\n    this.state.values[index] = e.target.value\n\n\n  this.setState(\n      {\n    values: this.state.values,\n  })\n}\n\n  HandleSelect = (e) =>{\n\n    this.state.eval[this.state.counter] = e.target.value\n\n    this.setState(\n        {\n      values: this.state.eval,\n    })\n\n  }\n\n  HandlePar = (e) => {\n    var val = e.target.value\n    this.setState(\n        {\n      paragraph: val\n    })\n    console.log(this.state.paragraph)\n  }\n\n\n\n\n  HandleChange = (event) => {\n\n/*\n    const val = this.myRef.current.value\n    if (val == this.props.data[this.state.number].answer) {\n      this.setState(\n          {\n        correct: true,\n      })\n    }\n    */\n\n    if (this.state.stage == 'start') {\n        this.state.color[0] = 'blue'\n      this.setState(\n          {\n        stage: 'evaluation',\n        color:   this.state.color\n\n      })\n    }\n\n    var len = this.props.data[this.state.number].feedback.split(';').length  - 1\n    if (this.state.stage == 'evaluation' && this.state.counter == len) {\n\n        for (var i =0; i< this.state.color.length;i ++ ){\n            this.state.color[i] = ''\n\n\n        }\n\n      this.setState(\n          {\n        stage: 'validation',\n        color:   this.state.color\n\n      })\n    }\n    else if (this.state.stage == 'evaluation'  && this.state.counter < len){\n\n      for (var i =0; i< this.state.color.length;i ++ ){\n        if (i == this.state.counter+1){\n          this.state.color[i] = 'blue'\n        }\n        else {\n          this.state.color[i] = ''\n          }\n        }\n\n        this.setState(\n            {\n            counter : this.state.counter + 1,\n            color:   this.state.color\n\n        })\n      }\n\n\n\n\n    if (this.state.stage == 'validation'){\n\n      console.log(this.state.values)\n      /*\n      this.myRef.current.value = ''\n      const val1 = this.myRef2.current.value\n      */\n      var new_dic = {}\n      new_dic[\"user_name\"] = 'Vasya'\n      new_dic[\"correct_answer\"] = this.state.values.join(';')\n      new_dic[\"valuation\"] = this.state.eval.join(';')\n      new_dic[\"sentence_id\"] = this.props.data[this.state.number].id.toString()\n      new_dic['paragraph'] = this.state.paragraph\n      this.props.postD(new_dic)\n\n      this.setState(\n          {\n        stage: 'start',\n        number: this.state.number + 1,\n        correct : false,\n        validation : '',\n        values : [],\n        eval : [],\n        paragraph: '',\n        counter: 0,\n        color: []\n      })\n\n      var lemma_list = this.props.data[this.state.number].lemma.split(';')\n      for (var i=0;i< lemma_list.length; i++){\n        this.state.values[i] = 'not'\n        this.state.eval[i] = 1\n        this.state.color[i] = ''\n        this.setState(\n            {\n          values: this.state.values,\n          eval : this.state.eval,\n          color:  this.state.color\n        })\n      }\n\n    }\n\n\n\n    }\n\n\n\n  render(){\n\n\n\nif (this.state.number  < Object.keys(this.props.data).length) {\n    var my_number = this.state.number\n    var name = ''\n    if (this.state.stage == 'start') {\n      name = 'answer'\n    }\n    else if (this.state.stage == 'validation') {\n      name = 'submit'\n    }\n    else if (this.state.stage == 'evaluation') {\n      name = 'evaluate'\n    }\n\n\n    var temp_dic = {}\n    var answer_list = this.props.data[this.state.number].answer.split(';')\n    var lemma_list = this.props.data[this.state.number].lemma.split(';')\n    var feedback_list = this.props.data[this.state.number].feedback.split(';')\n    for (var i=0;i< answer_list.length; i++){\n      temp_dic[i] = [answer_list[i], lemma_list[i]]\n    }\n    var frase = this.props.data[this.state.number].sentence\n    frase = frase.split('$')\n    var count = 0\n    var color = this.state.color\n    const new_frase = frase.map((sent, index) => {\n\n      if (sent== lemma_list[count]){\n      count++\n      index = index - count\n      console.log(color)\n        return <input ref={this.myRef} key = {index} placeholder= {`(${lemma_list[count-1]})`}  style={{width:'90px', border: '0px', padding: '5px', backgroundColor: color[index]}}\n            onChange={(e)=>{this.handleInputChange(e,index)}}\n          />\n\n        }\n       else {\n           return <p style={{display:'inline'}}> {sent} </p>\n         }\n\n       }\n    )\n\n\n    var post_text = <div> </div>\n    switch(this.state.stage){\n        case 'evaluation':\n\n          post_text =  <div style={{marginTop:'10px'}}>\n          <div> {feedback_list[this.state.counter]}   </div>\n          <select  ref={this.myRef2} style={{marginTop:'5px'}} onChange={(e)=>{this.HandleSelect(e)}}>\n            <option value='1'> 1 </option>\n            <option value='2'> 2 </option>\n            <option value='3'> 3 </option>\n            <option value='4'> 4 </option>\n            <option value='5'> 5 </option>\n          </select>\n        </div>\n        break;\n\n          case 'validation':\n\n            post_text = <div style={{marginTop:'10px'}}>\n            <div> Оцените качество параграфа   </div>\n            <select style={{marginTop:'5px'}} onChange={(e)=>{this.HandlePar(e)}}>\n              <option value='1'> 1 </option>\n              <option value='2'> 2 </option>\n              <option value='3'> 3 </option>\n              <option value='4'> 4 </option>\n              <option value='5'> 5 </option>\n            </select>\n          </div>;\n            break;\n\n    }\n\n   return (\n     <div>\n       <center style={{marginTop:'100px'}}>\n         {new_frase}\n      </center>\n      <center style={{marginTop:'100px'}}>\n        <div>\n        {post_text}\n      </div>\n     </center>\n\n\n      <center style={{marginTop:'100px'}}>\n        <button onClick={this.HandleChange} >\n          {name}\n      </button>\n     </center>\n     <ProgressBar now={my_number*100/this.props.data.length} style={{margin:'100px', }}/>\n\n   </div>\n   )\n\n\n\n}\n\nelse{\n\nreturn (\n  <div>\n    <center style={{marginTop:'100px'}}>\n    Thank you!\n\n   </center>\n\n\n</div>\n\n)\n\n}\n\n\n }\n}\n\nconst mapStateToProps = (state) => {\n\n    return {\n      sentence: state.sentence.sentence,\n\n  }\n}\n\n\nexport default withRouter(connect(mapStateToProps, {postD})(Test))\n","import React from 'react';\nimport Info from './Info.jsx'\nimport Test from './Test.jsx'\nimport { Link, withRouter } from 'react-router-dom'\n\nimport { mySentence } from './redux/sentence-reducer.js'\nimport { connect } from 'react-redux'\n\n\n\nclass Experiment extends React.Component {\n\n  state = {\n    start: false,\n    data:  ''\n  }\n\n  componentDidMount() {\n    this.props.mySentence()\n    console.log(this.props.sentence)\n\n\n  }\n\n   handleClick = (event) => {\n\n        this.setState(\n            {\n          start: true,\n          data : this.props.sentence\n        })\n          }\n\n\n\n  render(){\n\n\n\n    const start =this.state.start\n   return (\n     <div>\n     { !start ? <Info start={this.handleClick}/> :\n     <Test data={this.state.data} />\n   }\n   </div>\n   )\n }\n}\n\nconst mapStateToProps = (state) => {\n\n    return {\n      sentence: state.sentence.sentence,\n\n  }\n}\n\n\nexport default withRouter(connect(mapStateToProps,{mySentence})(Experiment))\n","import Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\n\nfunction Login() {\n  return (\n\n    <Container style= {{border:'solid #007bff',borderRadius: '5px', marginTop: '50px', padding: '20px'}}>\n  <Row>\n    <Col>\n\n\n    <Form>\n    <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n    <Form.Text className=\"text-muted\">\n      We'll never share your email with anyone else.\n    </Form.Text>\n    </Form.Group>\n\n    <Form.Group controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" />\n    </Form.Group>\n    <Form.Group controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n    </Form.Group>\n    <Button variant=\"primary\">\n    Submit\n    </Button>\n    </Form>\n\n\n    </Col>\n  </Row>\n</Container>\n\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport { Route,Switch } from 'react-router-dom';\nimport Experiment from './Experiment.jsx'\nimport Login from './Login.jsx'\n\n\nconst BaseRouter = (props) => {\n\n  return(\n    <div>\n      <Route exact path='/' component = {Login}/>\n      <Route exact path='/experiment' component={Experiment}/>\n\n    </div>\n)\n}\n\nexport default BaseRouter\n","import React from 'react';\n\nimport BaseRouter from './routes.js'\n\n\n\n\nconst  Body = () => {\n   return (\n            <BaseRouter />\n  )\n}\n\nexport default Body\n","import React from 'react';\nimport Body from './Body.jsx'\nimport {BrowserRouter as Router} from 'react-router-dom'\n\n\nfunction App() {\n  return (\n    <Router>\n      <Body/>\n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\nimport sentenceReducer from \"./sentence-reducer.js\";\n\n\nimport thunkMiddleware from \"redux-thunk\";\n\nlet reducers = combineReducers({\n    sentence : sentenceReducer,\n\n});\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n\nlet store = createStore(reducers, composeEnhances(applyMiddleware(thunkMiddleware)));\n\nwindow.store = store;\n\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {createStore, compose, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {Provider} from 'react-redux'\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}